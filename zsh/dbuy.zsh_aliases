alias djact='[[ -f bin/activate ]] && source bin/activate || [[ -f .venv/bin/activate ]] && source .venv/bin/activate || [[ -f venv/bin/activate ]] && source venv/bin/activate'
alias dj='djact && ./manage.py'
alias djrs='dj runserver'
alias ll='ls -lFH'
alias la='ls -lAhS'
alias grep='grep --line-number --color=auto'
alias nano='nano -w'
alias memusage="ps -u $LOGNAME -o pid,rss,command | sort -n +1 -2"
alias visudo='sudo -E visudo'
alias pycheck="python -m py_compile"
alias djsp='[[ -f manage.py ]] && python manage.py shell_plus --quiet-load || ipython'
alias djmigrate='python manage.py migrate --merge --ignore-ghost-migrations'
alias promote_dev='git checkout dev ; git pull ; git checkout staging ; git pull ; git merge origin/dev ; git push origin staging'
alias promote_staging='git checkout staging ; git pull ; git checkout master ; git pull ; git merge origin/staging ; git push origin master'
alias start_celery='C_FORCE_ROOT=1 celery worker -A topenguins -l info -c 1'
alias check_restore_status='sqlcmd -U sa -S localhost -Q "select command, percent_complete from sys.dm_exec_requests where command like '"'"'restore database%'"'"'"'
alias kpyc="find . -name '*.pyc' -delete"
function find_mail_errors() {
  for x in `sudo tail -50000 /var/log/maillog | grep -Ei '(quota|perm|fail|error)' | cut -d':' -f4` ; do 
    sudo grep $x /var/log/maillog | grep -i from | sed -E 's,^(.{15}).*from=<(.*)>.*$,\1     \2,'; 
  done
}
alias djt='dj run_integration_tests -t'
alias sqlplus="rlwrap -i -f ~/.sqlplus_history -H ~/.sqlplus_history -s 30000 sqlplus"
alias rman="rlwrap -i -f ~/.rman_history -H ~/.rman_history -s 30000 rman"
